var usersStore;var groupsStore;var sudoStore;function loadUsersGrid(){usersStore.baseParams['server']=server;usersStore.baseParams['suffix']=suffix;usersStore.load({waitMsg:'Loading users'});}
function loadGroupsGrid(){groupsStore.baseParams['server']=server;groupsStore.baseParams['suffix']=suffix;groupsStore.load({waitMsg:'Loading groups'});}
function loadSudoGrid(){sudoStore.baseParams['server']=server;sudoStore.baseParams['suffix']=suffix;sudoStore.load({waitMsg:'Loading sudo roles'});}
function loadHostsGrid(){hostsStore.baseParams['server']=server;hostsStore.baseParams['suffix']=suffix;hostsStore.load({waitMsg:'Loading sudo roles'});}
Ext.onReady(function(){Ext.QuickTips.init();Ext.form.Field.prototype.msgTarget='side';function extendSession(how_much){if(!how_much)how_much=600;Ext.Ajax.request({url:'/extend_session',method:'GET',failure:function(data){Ext.fly(tbSession.getEl()).update('Session cannot be extended. Please log in again.');return(false);},success:function(data){getSession();return(true);},params:{how_much:how_much},});}
function getSession(){Ext.Ajax.request({url:'/get_session',method:'GET',failure:function(data){Ext.fly(tbSession.getEl()).update('Could not get Session data');return(false);},success:function(data){var action=Ext.util.JSON.decode(data.responseText);Ext.fly(tbSession.getEl()).update('Session ends at '+action.hsession_end);return(action);}});}
function sessionExpired(sess){if(!sess){sess=getSession();if(!sess)return(true);}
if(parseInt(sess.now)>parseInt(sess.session_end))
return(true);return(false);}
var serversCombo=new Ext.form.ComboBox({emptyText:'Select a server...',mode:'remote',triggerAction:'all',selectOnFocus:true,forceSelection:true,allowBlank:false,fieldLabel:'LDAP servers',loadingText:'Loading servers list',displayField:'hostname',id:'server',anchor:'70%',readOnly:true,typeAhead:true,store:new Ext.data.JsonStore({url:"/config/get_servers",root:'servers',fields:[{name:'ip'},{name:'hostname'}],})});var suffixCombo=new Ext.form.ComboBox({emptyText:'Select a suffix...',mode:'remote',triggerAction:'all',selectOnFocus:true,forceSelection:true,allowBlank:false,fieldLabel:'LDAP server suffix',loadingText:'Loading suffixes list',displayField:'suffix',id:'suffix',anchor:'70%',readOnly:true,typeAhead:true,store:new Ext.data.JsonStore({url:"/config/get_suffix",root:'suffixes',method:'GET',baseParams:{ip:serversCombo.getValue(),limit:10},fields:[{name:'suffix'}],})});suffixCombo.on('beforequery',function(cb,query,forceAll,e){suffixCombo.store['method']='GET';suffixCombo.store.baseParams['ip']=serversCombo.getRawValue();});suffixCombo.on('change',function(cb,query,forceAll,e){loadUsersGrid();loadGrousGrid();});usersStore=new Ext.data.Store({proxy:new Ext.data.HttpProxy({url:'/user/list',method:'GET',}),reader:new Ext.data.JsonReader({root:'results',id:'uid',},[{name:'uid'},{name:'firstname'},{name:'surname'},{name:'uidNumber'},{name:'gidNumber'},{name:'homedir'},{name:'loginShell'},])});function renderLock(s,p,r){if(s=='/bin/false'){return"<span style='color:red'>yes</span>";}else{return"no";}}
var usersColumns=new Ext.grid.ColumnModel([new Ext.grid.RowNumberer(),{header:"User",width:90,sortable:true,dataIndex:'uid'},{header:"Name",width:100,sortable:true,dataIndex:'firstname'},{header:"Surname",width:100,sortable:true,dataIndex:'surname'},{header:"UID",width:50,sortable:true,dataIndex:'uidNumber'},{header:"GID",width:50,sortable:true,dataIndex:'gidNumber'},{header:"Home",width:140,sortable:true,dataIndex:'homedir'},{header:"Shell",width:70,sortable:true,dataIndex:'loginShell'},{header:"Locked",width:50,sortable:true,dataIndex:'loginShell',renderer:renderLock},]);var usersGrid=new Ext.grid.GridPanel({ds:usersStore,cm:usersColumns,deferredRender:false,editable:true,sm:new Ext.grid.RowSelectionModel({singleSelect:false}),width:'100%',height:350,frame:true,iconCls:'icon-grid',tbar:[{text:'Add User',tooltip:'Add a new User to the list',iconCls:'user_add',handler:function(){addUser(usersStore);},},'-',{text:'Edit User',tooltip:'Edit the selected user from the list',iconCls:'user_edit',handler:function(x){var n=usersGrid.getSelections().length;if(n>1){Ext.MessageBox.alert('Error','You can only edit one user at time');}else if(n==0){Ext.MessageBox.alert('Error','Please select a user from the list');}else{addUser(usersStore,usersGrid.getSelections()[0]);}},},'-',{text:'Remove User',tooltip:'Remove the selected user from the list',iconCls:'user_delete',handler:function(x){delUser(usersStore,usersGrid);},},'-',{text:'Lock/Unlock Account',tooltip:'Locks or unlocks account',iconCls:'user_lock',handler:function(x){lockUser(usersStore,usersGrid);},},'-',{text:'Reload',tooltip:'Reload users grid',iconCls:'refresh',handler:function(){loadUsersGrid();},}],});groupsStore=new Ext.data.Store({proxy:new Ext.data.HttpProxy({url:'/group/list',method:'GET',}),reader:new Ext.data.JsonReader({root:'results',},[{name:'name'},{name:'gid'},{name:'members'},])});function renderMember(m){if(m.length<2)return"";var out='';g=m.split(";");for(i=0;i<=g.length;i++){if(g[i])
out+=g[i].split("|")[1]+", ";}
out=out.slice(0,out.length-2);return(out);}
var groupsColumns=new Ext.grid.ColumnModel([new Ext.grid.RowNumberer(),{header:"Name",width:130,sortable:true,dataIndex:'name'},{header:"GID",width:50,sortable:true,dataIndex:'gid'},{header:"Members",width:200,sortable:true,dataIndex:'members',renderer:renderMember},]);var groupsGrid=new Ext.grid.GridPanel({store:groupsStore,deferredRender:false,cm:groupsColumns,sm:new Ext.grid.RowSelectionModel({singleSelect:true}),width:'100%',height:350,frame:true,iconCls:'icon-grid',tbar:[{text:'Add Group',tooltip:'Add a new Group to the list',iconCls:'user_add',handler:function(){addGroup(groupsStore,groupsGrid);return(true);},},'-',{text:'Edit Group',tooltip:'Edit the selected group from the list',iconCls:'user_edit',handler:function(x){var n=groupsGrid.getSelections().length;if(n>1){Ext.MessageBox.alert('Error','You can only edit one group at time');}else if(n==0){Ext.MessageBox.alert('Error','Please select a group from the list');}else{addGroup(groupsStore,groupsGrid.getSelections()[0]);}},},'-',{text:'Remove Group',tooltip:'Remove the selected group from the list',iconCls:'user_delete',handler:function(x){delGroup(groupsStore,groupsGrid);},},'-',{text:'Reload',iconCls:'refresh',tooltip:'Reload users and groups grid',handler:function(){loadGroupsGrid();},}],});sudoStore=new Ext.data.Store({proxy:new Ext.data.HttpProxy({url:'/sudo/list',method:'GET',}),reader:new Ext.data.JsonReader({root:'results',},[{name:'sudorole'},{name:'sudouser'},{name:'sudohost'},{name:'sudocommands'},])});var sudoColumns=new Ext.grid.ColumnModel([new Ext.grid.RowNumberer(),{header:"Role",width:130,sortable:true,dataIndex:'sudorole'},{header:"Sudo User",width:130,sortable:true,dataIndex:'sudouser'},{header:"Sudo Host",width:130,sortable:true,dataIndex:'sudohost'},{header:"Sudo Commands",width:280,sortable:true,dataIndex:'sudocommands'},]);var sudoGrid=new Ext.grid.GridPanel({store:sudoStore,deferredRender:false,cm:sudoColumns,sm:new Ext.grid.RowSelectionModel({singleSelect:true}),width:'100%',height:350,frame:true,iconCls:'icon-grid',tbar:[{text:'Add Role',tooltip:'Add a new sudo role to the list',iconCls:'add',handler:function(){addSudoRole(sudoStore,sudoGrid);return(true);},},'-',{text:'Edit Role',tooltip:'Edit the selected role from the list',iconCls:'edit',handler:function(x){var n=sudoGrid.getSelections().length;if(n>1){Ext.MessageBox.alert('Error','You can only edit one group at time');}else if(n==0){Ext.MessageBox.alert('Error','Please select a role from the list');}else{addSudoRole(sudoStore,sudoGrid.getSelections()[0]);}},},'-',{text:'Remove Role',tooltip:'Remove the selected role from the list',iconCls:'remove',handler:function(x){delSudoRole(sudoStore,sudoGrid);},},'-',{text:'Reload',iconCls:'refresh',tooltip:'Reload roles grid',handler:function(){loadSudoGrid();},}],});hostsStore=new Ext.data.Store({proxy:new Ext.data.HttpProxy({url:'/host/list',method:'GET',}),reader:new Ext.data.JsonReader({root:'results',},[{name:'hostname'},{name:'ip'},{name:'aliases'},])});var hostsColumns=new Ext.grid.ColumnModel([new Ext.grid.RowNumberer(),{header:"Host name",width:220,sortable:true,dataIndex:'hostname'},{header:"IP Address",width:150,sortable:true,dataIndex:'ip'},{header:"Aliases",width:200,sortable:true,dataIndex:'aliases'},]);var hostsGrid=new Ext.grid.GridPanel({store:hostsStore,deferredRender:false,cm:hostsColumns,sm:new Ext.grid.RowSelectionModel({singleSelect:true}),width:'100%',height:350,frame:true,iconCls:'icon-grid',tbar:[{text:'Add Host',tooltip:'Add a new host role to the list',iconCls:'add',handler:function(){addHost(hostsStore,hostsGrid);return(true);},},'-',{text:'Edit Host',tooltip:'Edit the selected host from the list',iconCls:'edit',handler:function(x){var n=hostsGrid.getSelections().length;if(n>1){Ext.MessageBox.alert('Error','You can only edit one group at time');}else if(n==0){Ext.MessageBox.alert('Error','Please select a group from the list');}else{addHost(hostsStore,hostsGrid.getSelections()[0]);}},},'-',{text:'Remove Host',tooltip:'Remove the selected host from the list',iconCls:'remove',handler:function(x){delHost(hostsStore,hostsGrid);},},'-',{text:'Reload',tooltip:'Reload hosts grid',iconCls:'refresh',handler:function(){loadHostsGrid();},}],});var windowTabs=[{title:'Users',layout:'form',items:usersGrid,},{title:'Groups',layout:'form',items:groupsGrid},{title:'Hosts',layout:'form',items:hostsGrid},{title:'Sudo',layout:'form',items:sudoGrid}];var tabPanel=new Ext.TabPanel({deferredRender:false,defaults:{bodyStyle:'padding:0px'},height:400,activeTab:0,anchor:'99%',plain:true,items:windowTabs});tabPanel.on('tabchange',function(panel,tab){if(tab['title']=="Users")
loadUsersGrid();if(tab['title']=="Groups")
loadGroupsGrid();if(tab['title']=="Sudo")
loadSudoGrid();if(tab['title']=="Hosts")
loadHostsGrid();});var ldapMgt=new Ext.FormPanel({bodyStyle:'padding:5px',labelWidth:175,border:false,baseCls:'x-plain',defaults:{bodyStyle:'padding:0px'},items:tabPanel,});var tbSession=new Ext.Toolbar.TextItem('Session: ');var tbStatus=new Ext.Toolbar.TextItem('Status: 0');var tbClock=new Ext.Toolbar.TextItem('');var toolBar=new Ext.StatusBar({id:'st-bar',plain:true,items:[tbStatus,'-',tbSession,'-',tbClock],});var window=new Ext.Window({title:'LDAP Users Management: '+server+' - '+suffix,width:750,height:500,minWidth:300,minHeight:200,plain:true,bodyStyle:'padding:5px;',buttonAlign:'center',closable:false,items:ldapMgt,bbar:toolBar,listeners:{'render':function(){Ext.TaskMgr.start({run:function(){Ext.fly(tbClock.getEl()).update(new Date().format('G:i:s'));},interval:1000});Ext.TaskMgr.start({run:function(){getSession();},interval:50000});}},buttons:[{text:'Help',handler:function(){showHelp();},},{text:'Logout',handler:function(){document.location="/logout";},}]});window.show();});
