lockUser=function(dataStore,gridPanel){var u=gridPanel.getSelectionModel().getSelections();if(u.length<1)return(false);Ext.MessageBox.confirm('Message','Are you sure you want to (un)lock this/these user(s)?',function(btn){if(btn!="yes")return(false);for(i=0;i<u.length;i++){Ext.Ajax.request({url:'/user/lock',failure:function(data){var action=Ext.util.JSON.decode(data.responseText);Ext.MessageBox.alert('Error',action.info);},success:function(data){var action=Ext.util.JSON.decode(data.responseText);rx=new RegExp(action.uid,"g");var i=gridPanel.getStore().find('uid',rx);if(i>0){gridPanel.getSelectionModel().selectRow(i);var u=gridPanel.getSelectionModel().getSelected();var record=gridPanel.getStore().getAt(i);if(record){if(action.value=="true"){record.set('loginShell','/bin/false');}else{record.set('loginShell','/bin/bash');}}}
Ext.MessageBox.alert('Confirmation',action.info);},params:{username:u[i].get('uid')}});}});}
delUser=function(dataStore,gridPanel){var u=gridPanel.getSelectionModel().getSelections();if(u.length<1)return(false);Ext.MessageBox.confirm('Message','Are you sure you want to delete this/these user(s)?',function(btn){if(btn!="yes")return(false);for(i=0;i<u.length;i++){Ext.Ajax.request({url:'/user/delete',failure:function(data){var action=Ext.util.JSON.decode(data.responseText);Ext.MessageBox.alert('Error',action.info);},success:function(data){var action=Ext.util.JSON.decode(data.responseText);rx=new RegExp(action.uid,"g");var i=gridPanel.getStore().find('uid',rx);if(i>0){gridPanel.getSelectionModel().selectRow(i);var u=gridPanel.getSelectionModel().getSelected();dataStore.remove(u);}
Ext.MessageBox.alert('Confirmation',action.info);},params:{username:u[i].get('uid')}});}});}
addUser=function(dataStore,selectedRow){Ext.apply(Ext.form.VTypes,{password:function(value,field){if(field.initialPasswordField){var pwd=Ext.getCmp(field.initialPasswordField);this.passwordText='Confirmation does not match your initial password entry.';return(value==pwd.getValue());}
passwordText:'Passwords must be at least 8 characters, containing either a number, or a valid special character (!@#$%^&*()-_=+)';var hasSpecial=value.match(/[0-9!@#\$%\^&\*\(\)\-_=\+]+/i);var hasLength=(value.length>=8);return(hasSpecial&&hasLength);},passwordText:'Passwords must be at least 8 characters, containing either a number, or a valid special character (!@#$%^&*()-_=+)',});var firstname=new Ext.form.TextField({fieldLabel:'First Name',allowBlank:false,name:'firstname',anchor:'90%'});var lastname=new Ext.form.TextField({fieldLabel:'Last Name',allowBlank:false,name:'lastname',anchor:'90%'});lastname.on('change',function(){var f=firstname.getValue();var s=lastname.getValue();var u=username.getValue();if((u.length<1)&&(f.length>1)&&(s.length>1)){username.setValue(f[0].toLowerCase()+s.toLowerCase());homedir.setValue('/export/home/'+username.getRawValue());}});var username=new Ext.form.TextField({fieldLabel:'User Name',allowBlank:false,name:'username',anchor:'90%'});username.on('change',function(){homedir.setValue('/export/home/'+username.getRawValue());});var password=new Ext.form.TextField({fieldLabel:'Password',allowBlank:false,inputType:'password',name:'password',id:'password1',vtype:'password',anchor:'90%'});var password2=new Ext.form.TextField({fieldLabel:'Re-Password',allowBlank:false,inputType:'password',name:'password2',id:'password2',vtype:'password',initialPasswordField:'password1',anchor:'90%'});var email=new Ext.form.TextField({vtype:'email',fieldLabel:'Email',name:'email',anchor:'90%'});var homedir=new Ext.form.TextField({fieldLabel:'Home Directory',name:'homedir',anchor:'90%',value:'',});var uid=new Ext.form.TextField({fieldLabel:'UID',name:'uidNumber',anchor:'90%',allowBlank:true,emptyText:'Leave empty to autogenerate',});var krb=new Ext.form.Checkbox({fieldLabel:'Sync with Kerberos?',name:'krb',anchor:'90%',allowBlank:true,checked:false,});var fPass=new Ext.form.Checkbox({fieldLabel:'Force password reset?',name:'forceNewPassword',anchor:'90%',allowBlank:true,checked:false,qtip:'Force user to change its password after the first successful login',});var loginShell=new Ext.form.TextField({fieldLabel:'Login Shell',name:'loginShell',anchor:'90%',allowBlank:false,value:"/bin/bash",});var uform=document.createElement('photoForm');uform.style.display='none';var photoForm=new Ext.form.BasicForm(uform,{method:'GET',url:'/utils/upload',fileUpload:true,});var photoView=new Ext.DataView({itemSelector:'div.photo',style:'overflow:auto',multiSelect:true,store:new Ext.data.JsonStore({url:'/user/get_photo',autoLoad:false,root:'results',id:'photo',fields:['photo','url',{name:'photo'}]}),tpl:new Ext.XTemplate('<tpl for=".">','<div class="photo" id="{name}">','<div class="thumb"><img src="{url}" class="thumb-img"></div>','<span>{photo}</span></div>','</tpl>')});var userGroupsStore=new Ext.data.Store({proxy:new Ext.data.HttpProxy({url:'/group/list',method:'GET',}),reader:new Ext.data.JsonReader({root:'results',},[{name:'name'},{name:'gid'},{name:'maingroup'},])});function renderMainGroup(g){var x='<input type="radio" id="gidNumber_'+g+'" name="gidNumber" value='+g+'>';return(x);}
var userGroupsColumns=new Ext.grid.ColumnModel([new Ext.grid.RowNumberer(),{header:"Group name",width:130,sortable:true,dataIndex:'name'},{header:"GID",width:130,sortable:true,dataIndex:'gid'},{header:"Main Group",width:130,dataIndex:'gid',renderer:renderMainGroup},]);var userGroupsGrid=new Ext.grid.GridPanel({store:userGroupsStore,fieldLabel:'Member of',name:'groupMembers',deferredRender:true,autoLoad:false,cm:userGroupsColumns,sm:new Ext.grid.RowSelectionModel({singleSelect:false}),width:'90%',height:130,frame:false,iconCls:'icon-grid',});var formPanel=new Ext.form.FormPanel({baseCls:'x-plain',labelWidth:100,url:'/user/add',method:'GET',defaultType:'textfield',items:[{xtype:'fieldset',collapsible:true,autoHeight:true,title:'Mandatory fields',items:[firstname,lastname,username,password,password2,homedir,]},{xtype:'fieldset',collapsible:true,collapsed:true,autoHeight:true,title:'Optional fields',items:[email,uid,loginShell,fPass,]},userGroupsGrid]});var window=new Ext.Window({title:'Add New LDAP User to System',width:500,height:480,minWidth:300,minHeight:250,layout:'fit',plain:true,bodyStyle:'padding:5px;',buttonAlign:'center',items:formPanel,buttons:[{text:'Save',handler:function(){if(formPanel.form.isValid()){var memberShip='';var groupsList=userGroupsGrid.getSelections();for(i=0;i<groupsList.length;i++){memberShip+=groupsList[i].get('gid')+",";}
var total=userGroupsGrid.getStore().getTotalCount();var has_main=false;for(i=0;i<total;i++){var j=userGroupsGrid.getStore().getAt(i);var sel_gid="gidNumber_"+j.get('gid');if(document.getElementById(sel_gid).checked==true){has_main=true;break;}}
if(!has_main){Ext.MessageBox.alert('Error Message','You must select a Main Group');return(false);}
formPanel.form.submit({params:{'groups':memberShip},waitMsg:'Saving...',failure:function(form,action){Ext.MessageBox.alert('Error Message',action.result.info);},success:function(form,action){Ext.MessageBox.alert('Confirm',action.result.info);window.destroy();loadUsersGrid();}});}else{Ext.MessageBox.alert('Errors','Please fix the errors noted.');}}},{text:'Cancel',handler:function(){window.destroy();}}]});window.show();userGroupsStore.load();var memberOf=new Array();if(selectedRow){Ext.Ajax.request({url:'/user/get_user',method:'GET',disableCaching:true,params:{userid:selectedRow.get('uid')},success:function(data){var user=Ext.util.JSON.decode(data.responseText);username.setValue(user.uid);firstname.setValue(user.givenName);lastname.setValue(user.sn);email.setValue(user.mail);homedir.setValue(user.homeDirectory);uid.setValue(user.uidNumber);var gid=document.getElementById('gidNumber_'+user.gidNumber);if(gid){gid.checked=true;}
loginShell.setValue(user.loginShell);var selectedRows=new Array();if(user.groups){memberOf=user.groups.split(":")
for(x=0;x<memberOf.length;x++){rx=new RegExp(memberOf[x],"g");var s=userGroupsGrid.getStore().find('name',rx);if(s!=-1)
selectedRows.push(s);}}
userGroupsGrid.getSelectionModel().selectRows(selectedRows);password.allowBlank=true;password.emptyText='Re-enter password if you wish to change it';password2.allowBlank=true;username.setDisabled(true);formPanel.getForm().baseParams={'username':user.uid};formPanel.getForm()['url']='/user/update';},});}};
